(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2006],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return l},kt:function(){return d}});var s=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,s,a=function(e,n){if(null==e)return{};var t,s,a={},r=Object.keys(e);for(s=0;s<r.length;s++)t=r[s],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)t=r[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=s.createContext({}),m=function(e){var n=s.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=m(e.components);return s.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},p=s.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=m(t),d=a,f=p["".concat(i,".").concat(d)]||p[d]||u[d]||r;return t?s.createElement(f,o(o({ref:n},l),{},{components:t})):s.createElement(f,o({ref:n},l))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=p;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var m=2;m<r;m++)o[m]=t[m];return s.createElement.apply(null,o)}return s.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5141:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return c},metadata:function(){return i},toc:function(){return m},default:function(){return u}});var s=t(2122),a=t(9756),r=(t(7294),t(3905)),o=["components"],c={},i={unversionedId:"examples/sub-commands/fileBased/commands/say",id:"examples/sub-commands/fileBased/commands/say",isDocsHomePage:!1,title:"say",description:"`ts",source:"@site/docs/examples/sub-commands/fileBased/commands/say.md",sourceDirName:"examples/sub-commands/fileBased/commands",slug:"/examples/sub-commands/fileBased/commands/say",permalink:"/docs/examples/sub-commands/fileBased/commands/say",editUrl:"https://github.com/naticoo/naticoo.github.io/edit/main/docs/examples/sub-commands/fileBased/commands/say.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ping",permalink:"/docs/examples/sub-commands/fileBased/commands/ping"},next:{title:"channel",permalink:"/docs/examples/sub-commands/fileBased/commands/say/channel"}},m=[],l={toc:m};function u(e){var n=e.components,t=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,s.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { NaticoCommand, DiscordenoMessage } from "../../../deps.ts";\nexport default class say extends NaticoCommand {\n  constructor() {\n    super("say", {\n      name: "say",\n      aliases: ["say"],\n      options: [\n        //You dont have to add the options here but its recomended once natico is compatible with slash commands\n        {\n          type: 1,\n          name: "channel",\n          description: "says the stuff in the current channel",\n        },\n\n        {\n          type: 1,\n          name: "dm",\n          description: "dms you the stuff instead",\n        },\n      ],\n    });\n  }\n  exec(message: DiscordenoMessage) {\n    //It will default to this without arguments\n    message.reply("Please chooose between " + this.options!.map((option) => option.name).join(", "));\n  }\n  dm(messsage: DiscordenoMessage, { text }: { text: string }) {\n    messsage.member!.sendDM(text);\n  }\n  channel(messsage: DiscordenoMessage, { text }: { text: string }) {\n    messsage.channel!.send(text);\n  }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/naticoo/examplebot/blob/main/sub-commands/fileBased/commands/say.ts"},"https://github.com/naticoo/examplebot/blob/main/sub-commands/fileBased/commands/say.ts")))}u.isMDXComponent=!0}}]);