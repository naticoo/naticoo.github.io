(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3564],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return l},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),m=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=m(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=m(t),d=o,f=u["".concat(c,".").concat(d)]||u[d]||p[d]||s;return t?r.createElement(f,a(a({ref:n},l),{},{components:t})):r.createElement(f,a({ref:n},l))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,a=new Array(s);a[0]=u;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var m=2;m<s;m++)a[m]=t[m];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4066:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},metadata:function(){return c},toc:function(){return m},default:function(){return p}});var r=t(2122),o=t(9756),s=(t(7294),t(3905)),a=["components"],i={},c={unversionedId:"examples/sub-commands/Multiple/commands/say",id:"examples/sub-commands/Multiple/commands/say",isDocsHomePage:!1,title:"say",description:"`ts",source:"@site/docs/examples/sub-commands/Multiple/commands/say.md",sourceDirName:"examples/sub-commands/Multiple/commands",slug:"/examples/sub-commands/Multiple/commands/say",permalink:"/docs/examples/sub-commands/Multiple/commands/say",editUrl:"https://github.com/naticoo/naticoo.github.io/edit/main/docs/examples/sub-commands/Multiple/commands/say.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ping",permalink:"/docs/examples/sub-commands/Multiple/commands/ping"},next:{title:"mod",permalink:"/docs/examples/sub-commands/Multiple/mod"}},m=[],l={toc:m};function p(e){var n=e.components,t=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'import { NaticoCommand, DiscordenoMessage } from "../../../deps.ts";\nexport default class say extends NaticoCommand {\n  constructor() {\n    super("say", {\n      name: "say",\n      aliases: ["say"],\n      options: [\n        {\n          type: 1,\n          name: "channel",\n          description: "says the stuff in the current channel",\n          options: [\n            {\n              type: 3,\n              name: "text",\n              description: "stuff you want to say in the channel",\n              required: false,\n            },\n          ],\n        },\n        {\n          type: 1,\n          name: "dm",\n          description: "dms you the stuff instead",\n          options: [\n            {\n              type: 3,\n              name: "text",\n              description: "text to dm",\n              required: false,\n            },\n          ],\n        },\n      ],\n    });\n  }\n  exec(message: DiscordenoMessage) {\n    //It will default to this without arguments\n    message.reply("Please chooose between " + this.options!.map((option) => option.name).join(", "));\n  }\n  dm(messsage: DiscordenoMessage, { text }: { text: string }) {\n    messsage.member!.sendDM(text);\n  }\n  channel(messsage: DiscordenoMessage, { text }: { text: string }) {\n    messsage.channel!.send(text);\n  }\n}\n')),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/naticoo/examplebot/blob/main/sub-commands/Multiple/commands/say.ts"},"https://github.com/naticoo/examplebot/blob/main/sub-commands/Multiple/commands/say.ts")))}p.isMDXComponent=!0}}]);