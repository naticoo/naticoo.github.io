(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9671],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=o,f=p["".concat(c,".").concat(m)]||p[m]||u[m]||i;return n?r.createElement(f,a(a({ref:t},d),{},{components:n})):r.createElement(f,a({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},426:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return c},toc:function(){return l},default:function(){return u}});var r=n(2122),o=n(9756),i=(n(7294),n(3905)),a=["components"],s={sidebar_position:1},c={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"Tutorial Intro",description:"Let's discover Natico in less than 5 minutes.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",editUrl:"https://github.com/naticoo/naticoo.github.io/edit/main/docs/intro.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"index",permalink:"/docs/api/index"}},l=[{value:"Getting Started",id:"getting-started",children:[{value:"Creating the bot client",id:"creating-the-bot-client",children:[]},{value:"Creating your first command",id:"creating-your-first-command",children:[]}]}],d={toc:l};function u(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Let's discover ",(0,i.kt)("strong",{parentName:"p"},"Natico in less than 5 minutes"),"."),(0,i.kt)("h2",{id:"getting-started"},"Getting Started"),(0,i.kt)("p",null,"Get started by ",(0,i.kt)("strong",{parentName:"p"},"Downloading ",(0,i.kt)("a",{parentName:"strong",href:"https://deno.land/"},"deno")),"."),(0,i.kt)("p",null,"First of you are going to create a deps.ts file with the following code we do this so we can import everything from the deps.ts file when you need to import more things"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"//deps.ts\nexport * from 'https://deno.land/x/natico/mod.ts';\n")),(0,i.kt)("h3",{id:"creating-the-bot-client"},"Creating the bot client"),(0,i.kt)("p",null,"Then create a mod.ts file with the following code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"//mod.ts\nimport { NaticoCommandHandler, NaticoClient } from './deps.ts';\nclass BotClient extends NaticoClient {\n    constructor(public options?: NaticoClientOptions) {\n        super(options);\n    }\n    // This is the command handler that will be handling your commands\n    commandHandler: NaticoCommandHandler = new NaticoCommandHandler(this, {\n        directory: './commands',\n        prefix: '!',\n    });\n    async start(token: string) {\n        // Loading its modules\n        await this.commandHandler.loadALL();\n        //Then just simply login\n        return this.login(token);\n    }\n}\nconst botClient = new BotClient({\n    intents: ['Guilds', 'GuildMessages', 'GuildVoiceStates'],\n});\nbotClient.start('Insert your token here');\n")),(0,i.kt)("h3",{id:"creating-your-first-command"},"Creating your first command"),(0,i.kt)("p",null,"Then we will be making our first command"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"//commands/ping.ts\nimport { NaticoCommand, DiscordenoMessage } from '../deps.ts';\nexport default class ping extends NaticoCommand {\n    constructor() {\n        super('ping', {\n            name: 'ping',\n            aliases: ['ping'],\n        });\n    }\n    exec(message: DiscordenoMessage) {\n        message.reply('Pong');\n    }\n}\n")),(0,i.kt)("p",null,"And now your all set to start creating your bot with discordeno and natico"),(0,i.kt)("p",null,"All resulting code can be found ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/naticoo/examplebot/tree/main/basic-commands"},"here")))}u.isMDXComponent=!0}}]);